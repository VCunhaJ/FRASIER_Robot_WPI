cmake_minimum_required(VERSION 2.8.3)
project(frasier_ui)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  std_msgs
  frasier_msgs
  message_runtime
  message_generation
)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)





###################################
## catkin specific configuration ##
###################################
catkin_package(
  INCLUDE_DIRS include
  CATKIN_DEPENDS roscpp std_msgs frasier_msgs
#  DEPENDS system_lib
)

###########
## Build ##
###########

include_directories(
  ${catkin_INCLUDE_DIRS}
    INCLUDE_DIRS include
)

## Declare a cpp library
add_library(UI_Command_Handler
	src/UI_Command_Handler.cpp
)

add_library(FRASIER_Pub_Handler
	src/FRASIER_Pub_Handler.cpp
 )


## Declare a cpp Executable/Targets
add_executable(enable_teleop_node src/Teleop/teleop_enabled.cpp)
target_link_libraries(enable_teleop_node ${catkin_LIBRARIES} FRASIER_Pub_Handler)


add_executable(disable_teleop_node src/Teleop/teleop_disabled.cpp)
target_link_libraries(disable_teleop_node ${catkin_LIBRARIES} FRASIER_Pub_Handler)


add_executable(resume_ui_node src/resume_ui.cpp)
target_link_libraries(resume_ui_node ${catkin_LIBRARIES} FRASIER_Pub_Handler)


add_executable(enable_senz3d_node src/Object_Detection/close_range_senz3d_camera_enabled.cpp)
target_link_libraries(enable_senz3d_node ${catkin_LIBRARIES} FRASIER_Pub_Handler)


add_executable(disable_senz3d_node src/Object_Detection/close_range_senz3d_camera_disabled.cpp)
target_link_libraries(disable_senz3d_node ${catkin_LIBRARIES} FRASIER_Pub_Handler)







## Specify libraries to link a library or executable target against

  

## Copy header files
 install(DIRECTORY include/${PROJECT_NAME}/
 DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
 FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h" )



